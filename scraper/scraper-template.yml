AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  ServiceName:
    Type: String
    Description: A name for the service
  Image:
    Type: String
  ContainerCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container
  SAMStackName:
    Type: String
    Description: The name of the stack you created with sam package and sam deploy
Resources:
  ScraperFeedBucket:
    Type: AWS::S3::Bucket
  FargateLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 1
  FargateECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub 'fargate-${AWS::StackName}'
  FargateVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.10.0/24
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  FargateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.10.10.0/24
      VpcId: !Ref FargateVPC
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  FargateIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  FargateAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref 'FargateVPC'
      InternetGatewayId: !Ref 'FargateIGW'
  FargateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref 'FargateVPC'
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  FargateRoute:
    Type: AWS::EC2::Route
    DependsOn: FargateAttachGateway
    Properties:
      RouteTableId: !Ref 'FargateRouteTable'
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref 'FargateIGW'
  FargateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref 'FargateRouteTable'
      SubnetId: !Ref 'FargateSubnet'
  FargateSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Generated by CloudFormation"
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 127.0.0.1/32
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
      VpcId: !Ref FargateVPC
  FargateExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Sid: 'ECS'
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
  FargateTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Sid: 'ECS'
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ScraperFeedBucketPolicy
          PolicyDocument:
            Statement:
              - Effect: 'Allow'
                Action:
                  - "s3:PutObject"
                Resource: !Sub 'arn:aws:s3:::${ScraperFeedBucket}/*'
        - PolicyName: SQSPushPolicy
          PolicyDocument:
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'sqs:SendMessage'
                Resource:
                  Fn::ImportValue:
                    !Sub: '${SAMStackName}-SQSARN'
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt 'FargateExecutionRole.Arn'
      TaskRoleArn: !GetAtt 'FargateTaskRole.Arn'
      ContainerDefinitions:
        - Name: !Ref 'ServiceName'
          Cpu: !Ref 'ContainerCpu'
          Memory: !Ref 'ContainerMemory'
          Image: !Ref 'Image'
          Environment:
            - Name: 'SQS_URL'
              Value:
                Fn::ImportValue:
                  !Sub: '${SAMStackName}-SQSURL'
            - Name: 'EXPORT_BUCKET'
              Value: !Ref 'ScraperFeedBucket'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'FargateLogGroup'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'AWS::StackName'
  TaskScheduleRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceEventsRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
  TaskSchedule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: rate(3 days)
      State: ENABLED
      Targets:
        - Id: !Sub '${ServiceName}-Fargate-Task'
          Arn: !GetAtt 'FargateECSCluster.Arn'
          RoleArn: !GetAtt 'TaskScheduleRole.Arn'
          EcsParameters:
            TaskDefinitionArn: !Ref TaskDefinition
            TaskCount: 1
            LaunchType: 'FARGATE'
            PlatformVersion: 'LATEST'
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                SecurityGroups:
                  - !Ref FargateSG
                Subnets:
                  - !Ref FargateSubnet
