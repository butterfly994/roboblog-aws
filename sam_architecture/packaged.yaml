AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'roboBlog-process-and-post

  Insert processed entries into dynamoDB Use dynamoDB entries to pseudo-randomly generate
  and post to wordpress

  '
Parameters:
  WordpressIP:
    Type: String
    Description: The static IP attached to your wordpress instance
Globals:
  Function:
    Timeout: 900
Resources:
  RoboBlogArchiverFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://roboblog-archiver-files/e52f0b1b4f12cfafe5ba25bede9b41bc
      Handler: index.lambda_handler
      Runtime: python3.7
      Environment:
        Variables:
          DYNAMO_DB_NAME:
            Ref: MyTable
          SQS_URL:
            Ref: MyQueue
      Policies:
      - SQSPollerPolicy:
          QueueName:
            Fn::GetAtt:
            - MyQueue
            - QueueName
      - DynamoDBCrudPolicy:
          TableName:
            Ref: MyTable
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - MyQueue
              - Arn
            BatchSize: 10
  RoboBlogGeneratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://roboblog-archiver-files/78235995160cab0b2060fd5a4c2a8fc9
      Handler: index.lambda_handler
      Runtime: python3.7
      Environment:
        Variables:
          DYNAMO_DB_NAME:
            Ref: MyTable
          WP_IP:
            Ref: WordpressIP
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - ssm:GetParameter
          Resource:
            Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/WP_PWD
      - DynamoDBReadPolicy:
          TableName:
            Ref: MyTable
      Events:
        GeneratePostScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)
  MyQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 900
      RedrivePolicy:
        maxReceiveCount: 1
        deadLetterTargetArn:
          Fn::GetAtt:
          - MyQueueDeadLetter
          - Arn
  MyQueueDeadLetter:
    Type: AWS::SQS::Queue
  MyTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: prefix
        AttributeType: S
      KeySchema:
      - KeyType: HASH
        AttributeName: prefix
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
Outputs:
  StackSQSUrl:
    Description: The url of the SQS Queue
    Value:
      Ref: MyQueue
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-SQSURL
  StackSQSArn:
    Description: The ARN of the SQS Queue
    Value:
      Fn::GetAtt:
      - MyQueue
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-SQSARN
